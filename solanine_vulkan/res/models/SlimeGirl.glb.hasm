:StateIdle  # Default anim bc it's the first defined
#animation Idle_Hip
animation Idle
loop      1
trans     goto_run            StateRun
trans     goto_jump           StateJumpFromIdle
trans     goto_fall           StateFall
trans     goto_attack         StateAttack
trans     current_state       StateMCMDrawWeapon       StateFullbodyDrawWeapon
trans     current_state       StateMCMSheathWeapon     StateFullbodySheathWeapon


:StateFullbodyDrawWeapon
animation Draw_Weapon
loop      0
on_finish StateIdle
trans     goto_run            StateRun          # @NOTE: this is just a copy of StateIdle's triggers
trans     goto_jump           StateJumpFromIdle
trans     goto_fall           StateFall
trans     goto_attack         StateAttack


:StateFullbodySheathWeapon
animation Sheath_Weapon
loop      0
on_finish StateIdle
trans     goto_run            StateRun          # @NOTE: this is just a copy of StateIdle's triggers
trans     goto_jump           StateJumpFromIdle
trans     goto_fall           StateFall
trans     goto_attack         StateAttack


:StateRun
#animation Running.inmotion
animation Running.inmotion.LittleUpperbody
loop      1
trans     goto_idle           StateIdle
trans     goto_jump           StateJumpFromRun
trans     goto_fall           StateFall
trans     goto_attack         StateAttack


:StateJumpFromIdle
animation Jumping_From_Idle
loop      0
trans     goto_idle           StateLandIdle
trans     goto_run            StateLandRun
trans     goto_attack         StateAttack


:StateJumpFromRun
animation Jumping_From_Run
loop      0
trans     goto_idle           StateLandIdle
trans     goto_run            StateLandRun
trans     goto_attack         StateAttack


:StateFall
animation Falling
loop      0
trans     goto_idle           StateLandIdle
trans     goto_run            StateLandRun
trans     goto_attack         StateAttack


:StateLandIdle
animation Land_From_Jumping_From_Idle
loop      0
on_finish StateIdle
trans     goto_attack         StateAttack


:StateLandRun
animation Land_From_Jumping_From_Run
loop      0
on_finish StateRun
trans     goto_attack         StateAttack


:StateAttack   # NOTE: For this state, we don't want any triggers to leave before the ending event triggers
animation DW_Attack
loop      0
on_finish StateIdle
event     0.0                 EventDisableMCMLayer
event     0.231               EventPlaySFXAttack
event     1.0                 EventEnableMCMLayer
event     1.0                 EventEndAttack


# This masks the upper body starting with the Mid Back bone. Everything else should still get controlled normally by whatever layers aren't taking the bones
~MaskCombatMode
enabled   0
bone      Shoulder.L  # @NOTE: you need to have some way of doing errors in case if these bones are named incorrectly
bone      Upper Arm.L
bone      Forearm.L
bone      Hand.L
bone      IndexF1.L
bone      IndexF2.L
bone      MiddleF1.L
bone      MiddleF2.L
bone      RingF1.L
bone      RingF2.L
bone      Pinky1.L
bone      Pinky2.L
bone      Thumb1.L
bone      Thumb2.L
bone      Shoulder.R
bone      Upper Arm.R
bone      Forearm.R
bone      Hand.R
bone      IndexF1.R
bone      IndexF2.R
bone      MiddleF1.R
bone      MiddleF2.R
bone      RingF1.R
bone      RingF2.R
bone      Pinky1.R
bone      Pinky2.R
bone      Thumb1.R
bone      Thumb2.R
# bone      Lower Back
bone      Mid Back
bone      Upper Back
bone      Neck
bone      Head
bone      Back Attachment
bone      Hand Attachment


:StateMCMIdle  # Default anim for this mask bc it's the first defined
mask      MaskCombatMode
animation DW_Idle
loop      1
trans     current_state       StateRun       StateMCMRun
trans     leave_combat_mode   StateMCMSheathWeapon
trans     goto_combat_mode    StateMCMDrawWeapon

# @NOTE: current_state and not_current_state are special triggers where they look up what the current state is in a different mask (i.e. the one StateRun is in) and if it is/isn't the state specified (i.e. StateRun), then it will move to a different state on this mask. It's essentially a simple syncing usability.  -Timo

:StateMCMRun
mask      MaskCombatMode
animation DW_Run
loop      1
trans     not_current_state   StateRun       StateMCMIdle
trans     leave_combat_mode   StateMCMSheathWeapon
trans     goto_combat_mode    StateMCMDrawWeapon


:StateMCMDrawWeapon
mask      MaskCombatMode  # @NOTE: not specifying a mask puts this at the global mask. A mask is a whole other state machine running
animation Draw_Weapon
loop      0
on_finish StateMCMIdle
event     0.0                 EventEnableMCMLayer
event     0.0                 EventSwitchToHandAttachment
event     0.8                 EventPlaySFXMaterialize
trans     leave_combat_mode   StateMCMSheathWeapon


:StateMCMSheathWeapon
mask      MaskCombatMode
animation Sheath_Weapon
loop      0
on_finish StateMCMIdle
event     1.0                 EventDisableMCMLayer
event     1.0                 EventSwitchToBackAttachment
event     0.315789474         EventPlaySFXBreakoff
trans     goto_combat_mode    StateMCMDrawWeapon
